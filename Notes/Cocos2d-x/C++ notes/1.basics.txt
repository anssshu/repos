example
// myfirst.cpp--displays a message
#include <iostream>

int main()
{
using namespace std;
cout << “Come up and C++ me some time.”;
cout << endl;
cout << “You won’t regret it!” << endl;
return 0;
}




Dtata types in Cpp
-----------------------------------------------------------------------------
Data means raw information
In  computer programs data is stored inside memory elements .
These memory elements can be  defined in a program before stroing data inside it

 these definitions are called identifiers
 which can be variables or constants

 These identifires can only store data of some spacific types these types are
 called data types

 example
 int score=25;
 score is the identifier
 25 is the data stored in it
 and int is its data type

 Data types in cpp are

 Type 	               Keyword
Boolean               	bool
Character 	             char
Integer 	               int
Floating point 	        float
Double floating point 	double
Valueless 	             void
Wide character          	wchar_t
---------------------------------------------------

Type        	Typical Bit Width 	       Typical Range

char 	            1byte 	               -127 to 127 or 0 to 255
unsigned char 	  1byte 	                0 to 255
signed char 	    1byte 	                -127 to 127
int 	            4bytes 	                -2147483648 to 2147483647
unsigned int 	    4bytes 	                0 to 4294967295
signed int 	      4bytes 	                -2147483648 to 2147483647
short int 	      2bytes 	                -32768 to 32767
unsigned short int Range 	                0 to 65,535
signed short int 	 Range 	                -32768 to 32767
long int 	        4bytes 	                -2,147,483,647 to 2,147,483,647
signed long int 	4bytes 	                same as long int
unsigned long int 4bytes 	                0 to 4,294,967,295
float 	          4bytes 	                +/- 3.4e +/- 38 (~7 digits)
double 	          8bytes 	                +/- 1.7e +/- 308 (~15 digits)
long double 	    8bytes 	                +/- 1.7e +/- 308 (~15 digits)
wchar_t 	        2 or 4 bytes 	          1 wide character
---------------------------------------------------------------------------
enumerators
Enumerated Types:

An enumerated type declares an optional type name and a set of zero or more identifiers that can be used as values of the type. Each enumerator is a constant whose type is the enumeration.

To create an enumeration requires the use of the keyword enum. The general form of an enumeration type is:

enum enum-name { list of names } var-list;

Here, the enum-name is the enumeration's type name. The list of names is comma separated.

For example, the following code defines an enumeration of colors called colors and the variable c of type color. Finally, c is assigned the value "blue".

enum color { red, green, blue } c;
c = blue;

By default, the value of the first name is 0, the second name has the value 1, the third has the value 2, and so on. But you can give a name a specific value by adding an initializer. For example, in the following enumeration, green will have the value 5.

enum color { red, green=5, blue };

Here, blue will have a value of 6 because each name will be one greater than the one that precedes it.
---------------------------------------------------------------------------------------------

typedef Declarations:

You can create a new name for an existing type using typedef. Following is the simple syntax to define a new type using typedef:

typedef type newname;

For example, the following tells the compiler that feet is another name for int:

typedef int feet;

Now, the following declaration is perfectly legal and creates an integer variable called distance:

feet distance;
----------------------------------------------------------------------------------
